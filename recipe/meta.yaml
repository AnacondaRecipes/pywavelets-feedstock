{% set label = "'full'" %}
{% set tests = "['pywt']" %}
{% set name = "pywavelets" %}
{% set version = "1.8.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: f3800245754840adc143cbc29534a1b8fc4b8cff6e9d403326bd52b7bb5c35aa

build:
  number: 0
  skip: true  # [py<310]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vv

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - cython >=3.0.4
    - numpy 2.0 # [py<313]
    - numpy 2.1 # [py>=313]
    - pip
    - meson-python >=0.16.0
    - wheel
  run:
    - python
    - numpy >=1.23,<3
  run_constrained:
    - scipy >=1.9

test:
  imports:
    - pywt
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - python -c "import sys; import pywt; sys.exit(not pywt.test(verbose=2, label={{ label }}, tests={{ tests }}, extra_argv=['--durations=50']))"

about:
  home: https://github.com/PyWavelets/pywt
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - LICENSES_bundled.txt
  summary: Discrete Wavelet Transforms in Python
  description: |
    PyWavelets is a free Open Source library for wavelet transforms in Python.
    Wavelets are mathematical basis functions that are localized in both time and frequency.
    Wavelet transforms are time-frequency transforms employing wavelets. They are similar to
    Fourier transforms, the difference being that Fourier transforms are localized only in
    frequency instead of in time and frequency.
  doc_url: https://pywavelets.readthedocs.io
  dev_url: https://github.com/PyWavelets/pywt

extra:
  recipe-maintainers:
    - grlee77
    - jakirkham
    - ocefpaf
